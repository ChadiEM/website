name: Publish Container Image to GCP Artifact Registry

on:
  push:
    branches:
      - "**"
    tags:
      - "**"

jobs:
  build-push-registry:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: "${{ secrets.PROJECT_ID }}"
      REPOSITORY: container-images
      IMAGE: website
      REGION: europe-west3-docker.pkg.dev

    steps:
      - uses: actions/checkout@v2
      - name: Check if Git tag exists
        id: tag
        run: echo "::set-output name=tag::$(git tag --points-at HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Build Docker Image
        run: docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE .

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"
      - uses: google-github-actions/setup-gcloud@v0

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker $REGION --quiet

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGION }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest
          platforms: linux/amd64,linux/arm64

      - name: Push Docker Image to Artifact Registry (latest)
        if: github.ref == 'refs/heads/master'
        run: |-
          docker tag $IMAGE $REGION/$PROJECT_ID/$REPOSITORY/$IMAGE:latest
          docker push $REGION/$PROJECT_ID/$REPOSITORY/$IMAGE:latest

      - name: Push Docker Image to Artifact Registry (tag)
        if: steps.tag.outputs.tag
        env:
          TAG: "${{ steps.tag.outputs.tag }}"
        run: |-
          docker tag $IMAGE $REGION/$PROJECT_ID/$REPOSITORY/$IMAGE:$TAG
          docker push $REGION/$PROJECT_ID/$REPOSITORY/$IMAGE:$TAG
